// Place your key bindings in this file to override the defaults
[
    // navigation
    {
        "key": "Ctrl-h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "Ctrl-l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "Ctrl-j",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "Ctrl-k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "space ,",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "shift-l",
        "command": "workbench.action.nextEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "shift-h",
        "command": "workbench.action.previousEditorInGroup",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    // j - k
    // {
    //     "key": "j",
    //     "command": "list.selectDown",
    //     "when": "explorerViewletVisible && !inputFocus"
    // },
    // {
    //     "key": "k",
    //     "command": "list.selectUp",
    //     "when": "explorerViewletVisible && !inputFocus"
    // },
    // {
    //     "key": "j",
    //     "command": "selectNextSuggestion",
    //     "when": "suggestWidgetVisible && !inputFocus"
    // },
    // {
    //     "key": "k",
    //     "command": "selectPrevSuggestion",
    //     "when": "suggestWidgetVisible && !inputFocus"
    // },
    // coding
    {
        "key": "shift-k",
        "command": "editor.action.moveLinesDownAction",
        "when": "vim.mode != 'Intert' && editorTextFocus"
    },
    {
        "key": "shift-j",
        "command": "editor.action.moveLinesUpAction",
        "when": "vim.mode != 'Intert' && editorTextFocus"
    },
    {
        "key": "shift-k",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space c a",
        "command": "editor.action.codeAction",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space c r",
        "command": "editor.action.rename",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space c s",
        "command": "workbench.action.gotoSymbol",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space b d",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space b g d",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal'  && editorTextFocus"
    },
    {
        "key": "space space",
        "command": "workbench.action.quickOpen",
        "when": "vim.mode == 'Normal'  && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space g d",
        "command": "editor.action.revealDefinition",
        "when": "vim.mode == 'Normal' &&  editorTextFocus"
    },
    {
        "key": "space g r",
        "command": "editor.action.goToReferences",
        "when": "vim.mode == 'Normal' &&  editorTextFocus"
    },
    {
        "key": "space s g",
        "command": "workbench.action.findInFiles",
        "when": "vim.mode == 'Normal' &&  (editorTextFocus || !inputFocus)"
    },
    {
        "key": "space g g",
        "command": "workbench.view.scm",
        "when": "vim.mode == 'Normal' &&  (editorTextFocus || !inputFocus)"
    },
    {
        "key": "Ctrl-n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    {
        "key": "Ctrl-n",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
    },
    // File Explorer
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // {
    //     "key": "shit-a",
    //     "command": "explorer.newFolder",
    //     "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    // },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift-s",
        "command": "runCommands",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "args": {
            "commands": [
                "workbench.action.splitEditorDown",
                "explorer.openAndPassFocus",
                "workbench.action.closeOtherEditors"
            ]
        }
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
]